/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trippy_player.trippy_player;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.decoder.JavaLayerException;

/**
 *
 * @author Hp
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    
    private javax.swing.JFileChooser fileChooser;
    
    

    SoundJLayer sl;
    SoundJLayer s2_lofi;
    int file_load = 0;                  // files loaded in application from start to exit
    int totalDBFiles;                   // files stored in database
    int cur_dbFile = 0;                 // current playing file from database
    String[] dbFileLocations;           // file locations in database
    String[] dbFileNames;               // file names in database
    boolean play_playList = false; 
    boolean lofiCheck=false;// playlist playing status
    
    public main() {
        initComponents();
        
        try {
            loadPlaylists();            // loading playilists from database while initilizing players
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        top = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        side = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton12 = new javax.swing.JButton();
        logo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bottom = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Desktop = new javax.swing.JDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trippy Player");

        bg.setBackground(new java.awt.Color(33, 33, 33));

        top.setBackground(new java.awt.Color(56, 56, 56));

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Pitch");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Equilizer");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Robotic");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(0, 0, 0));
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Open");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.setFocusable(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(0, 0, 0));
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("LoFi");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.setFocusable(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topLayout = new javax.swing.GroupLayout(top);
        top.setLayout(topLayout);
        topLayout.setHorizontalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton8)
                .addGap(27, 27, 27)
                .addComponent(jButton7)
                .addGap(37, 37, 37)
                .addComponent(jButton9)
                .addGap(27, 27, 27)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        topLayout.setVerticalGroup(
            topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton9)
                    .addComponent(jButton11)
                    .addComponent(jButton8))
                .addGap(19, 19, 19))
            .addGroup(topLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        side.setBackground(new java.awt.Color(56, 56, 56));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Playlists");

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setForeground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setFocusable(false);

        jList1.setBackground(new java.awt.Color(48, 48, 48));
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton12.setBackground(new java.awt.Color(0, 0, 0));
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Add Playlist");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.setFocusable(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sideLayout = new javax.swing.GroupLayout(side);
        side.setLayout(sideLayout);
        sideLayout.setHorizontalGroup(
            sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sideLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 122, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(sideLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jButton12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sideLayout.setVerticalGroup(
            sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap())
        );

        logo.setBackground(new java.awt.Color(56, 56, 56));
        logo.setMaximumSize(new java.awt.Dimension(100, 100));
        logo.setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\tp-logo-03.png")); // NOI18N
        jLabel1.setLabelFor(logo);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logo.add(jLabel1);
        jLabel1.setBounds(60, 10, 80, 76);

        bottom.setBackground(new java.awt.Color(33, 33, 33));
        bottom.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("No File Loaded");

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\volume-up.png")); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setFocusPainted(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\fast-forward.png")); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setFocusPainted(false);
        jButton4.setFocusable(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\previous.png")); // NOI18N
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setFocusPainted(false);
        jButton5.setFocusable(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\repeat.png")); // NOI18N
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setFocusPainted(false);
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Remix");
        jButton1.setBorderPainted(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(2000);
        jSlider1.setValue(0);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.setFocusable(false);
        jSlider1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider1MouseDragged(evt);
            }
        });
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider1MouseClicked(evt);
            }
        });

        jSlider2.setMaximum(6);
        jSlider2.setMinimum(-80);
        jSlider2.setFocusable(false);
        jSlider2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider2MouseDragged(evt);
            }
        });
        jSlider2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider2MouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("-- : --");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("-- : --");

        javax.swing.GroupLayout bottomLayout = new javax.swing.GroupLayout(bottom);
        bottom.setLayout(bottomLayout);
        bottomLayout.setHorizontalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(35, 35, 35))
            .addGroup(bottomLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bottomLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bottomLayout.setVerticalGroup(
            bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomLayout.createSequentialGroup()
                        .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bottomLayout.createSequentialGroup()
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        Desktop.setBackground(new java.awt.Color(255, 51, 51));
        Desktop.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.black, java.awt.Color.darkGray));

        javax.swing.GroupLayout DesktopLayout = new javax.swing.GroupLayout(Desktop);
        Desktop.setLayout(DesktopLayout);
        DesktopLayout.setHorizontalGroup(
            DesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DesktopLayout.setVerticalGroup(
            DesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(side, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                                .addComponent(Desktop)
                                .addContainerGap())))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(side, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Desktop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    int cur_m_time = 0;         // current playing time in minutes
    int cur_time;               // current playing time in seconds
    int dis_cur_time = 0;       // current playing time display format
    
    
    // synchronized function to update slider according to current frame playing
    class Slider{
        synchronized void sliderMove(){
            while (sl.playing_status == true) {
                System.out.println(sl.getSliderPosition());
                jSlider1.setValue(sl.getSliderPosition());
                
                
                cur_time = (int) (sl.player.frameIndexCurrent/38);
                dis_cur_time = cur_time;
                
                int check_time = (cur_m_time + 1) * 60;
                
                if(cur_time > check_time) {
                    cur_m_time++;
                }

                if (cur_m_time > 0)
                    dis_cur_time = cur_time - (60 * cur_m_time);
                
                String dis_time = Integer.toString(cur_m_time) + " : " + dis_cur_time;

                
                jLabel5.setText(dis_time);
                
                // checking if the audio is finished
                if (sl.getSliderPosition() == sl.lastFrame){
                   audioEnd();      // updating audio and player status
                   
                   // checking if repeat is true and looping file
                   if (sl.repeat == true) {
                       
                        cur_m_time = 0;
                        cur_time = 0;
                        dis_cur_time = 0;

                        jLabel5.setText("00" + " : " + "00");
                       
                        sl.player.frameIndexCurrent = 0;
                        sl.play();
                        sl.playing_status = true;
                        jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\pause-button.png"));

                   }
                   
                }
            }
            
            
        }
    }
    
    // thread to run slider along with file
    class Thread1 extends Thread{  
        Slider slider;  
        Thread1(Slider slider){  
            this.slider = slider;  
        }  
        public void run(){  
            slider.sliderMove();  
        }
    }
    
    // function to update audio and player status when file ends 
    void audioEnd() {
        System.out.println("Playback Stopped");
        
        jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png"));
        sl.playing_status = false;
        sl.pause();
    }
    
    boolean thread_started = false;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // play/pause functions
        
        if (sl.playing_status == false) {
            
            jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\pause-button.png"));
            sl.playing_status = true;
            sl.play();
            
            
             
        } else if (sl.playing_status == true) {
            
            jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png"));
            sl.playing_status = false;
            sl.pause();
        }
        
        // updating slider and running on thread
        Slider slider = new Slider();
        Thread1 t1 = new Thread1(slider);
        t1.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // volume functions
        
        try {
            // TODO add your handling code here:
            if (sl.init_volume > -80f) {
                sl.setVolume(-80f);
                jButton3.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\volume-mute.png"));
                sl.init_volume = -80f;
            }
            else if (sl.init_volume == -80f) {
                sl.setVolume(6f);
                jButton3.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\volume-up.png"));
                sl.init_volume = 6f;
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JavaLayerException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // repeat functionality
        
        if (sl.repeat == false) {
            jButton6.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\repeat-on.png"));
            sl.repeat = true;
        } else if (sl.repeat == true) {
            jButton6.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\repeat.png"));
            sl.repeat = false;
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Equilizer eq = new Equilizer();
        Desktop.add(eq);
        eq.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Pitch pitch = new Pitch(sl);
        Desktop.add(pitch);
        pitch.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Robot robot = new Robot();
        Desktop.add(robot);
        robot.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if(lofiCheck == false){
            try {
                s2_lofi = new SoundJLayer("C:\\Users\\Hp\\Documents\\Audio Files\\lofi.mp3");
                
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        s2_lofi.play();
        lofiCheck = true;
        
        
        }
        else
        {
             s2_lofi.pause();
              lofiCheck = false;
        }
       
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // opening and file loading functionality
        
        if(file_load == 0 || sl.playing_status == false) {
            String dis_time = "00" + " : " + "00";
            jLabel4.setText(dis_time);
            
            file_load++;
            
            fileChooser = new JFileChooser();

            fileChooser.setAcceptAllFileFilterUsed(false);

            fileChooser.setDialogTitle("Select a .mp3 file");

            FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .mp3 files", "mp3");
            fileChooser.addChoosableFileFilter(restrict);

            int response = fileChooser.showOpenDialog(null);

            if (response == JFileChooser.APPROVE_OPTION) {
                jLabel3.setText(fileChooser.getSelectedFile().getName());

                try {

                    sl = new SoundJLayer(fileChooser.getSelectedFile().getAbsolutePath());

                } catch (UnsupportedAudioFileException | IOException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                System.out.println("Failed Opening File|");
            }

            // initializing time
            int time = (int) (sl.lastFrame/38);
            int m_time = 0;
            System.out.println(time);
            
            int check_time = (cur_m_time + 1) * 60;
            
            while(time > check_time) {
                time = time - (60);
                
                m_time++;
            }
            
            dis_time = Integer.toString(m_time) + " : " + time;
            
            jLabel4.setText(dis_time);
            
            jSlider1.setMaximum((int) sl.lastFrame);
        } else if (sl.playing_status == true) {
            sl.pause();
            
            cur_m_time = 0;
            cur_time = 0;
            dis_cur_time = 0;
            
            sl.player.frameIndexCurrent = 0;
            
            String dis_time = "00" + " : " + "00";
            jLabel5.setText(dis_time);
            
            jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png"));

            file_load++;
            
            fileChooser = new JFileChooser();

            fileChooser.setAcceptAllFileFilterUsed(false);

            fileChooser.setDialogTitle("Select a .mp3 file");

            FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .mp3 files", "mp3");
            fileChooser.addChoosableFileFilter(restrict);

            int response = fileChooser.showOpenDialog(null);

            if (response == JFileChooser.APPROVE_OPTION) {
                jLabel3.setText(fileChooser.getSelectedFile().getName());

                try {

                    sl = new SoundJLayer(fileChooser.getSelectedFile().getAbsolutePath());
                    
                } catch (UnsupportedAudioFileException | IOException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                System.out.println("Failed Opening File|");
            }

            // initializing time
            int time = (int) (sl.lastFrame/38);
            int m_time = 0;
            System.out.println(time);
            
            int check_time = (cur_m_time + 1) * 60;
            
            while(time > check_time) {
                time = time - (60);
                
                m_time++;
            }
            
            dis_time = Integer.toString(m_time) + " : " + time;
            
            jLabel4.setText(dis_time);
            
            jSlider1.setMaximum((int) sl.lastFrame);
            
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Remix remix = new Remix();
        Desktop.add(remix);
        remix.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSlider2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseClicked
        // audio slider
        int value = jSlider2.getValue();
        try {
            sl.setVolume(value);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JavaLayerException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jSlider2MouseClicked

    private void jSlider2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseDragged
        // audio slider
        int value = jSlider2.getValue();
        try {
            sl.setVolume(value);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JavaLayerException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jSlider2MouseDragged
       
    private void jSlider1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseDragged
        // player slider
        cur_m_time = 0;
        cur_time = 0;
        dis_cur_time = 0;

        String dis_time = "00" + " : " + "00";
        jLabel5.setText(dis_time);
        
        
        int value = jSlider1.getValue();
        
        if (sl.playing_status == true)
            sl.pause();
        sl.player.frameIndexCurrent = value;
        if (sl.playing_status == true)
            sl.play();
    }//GEN-LAST:event_jSlider1MouseDragged

    private void jSlider1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseClicked
        // player slider
        cur_m_time = 0;
        cur_time = 0;
        dis_cur_time = 0;

        String dis_time = "00" + " : " + "00";
        jLabel5.setText(dis_time);
        
        int value = jSlider1.getValue();
        
        if (sl.playing_status == true)
            sl.pause();
        sl.player.frameIndexCurrent = value;
        if (sl.playing_status == true)
            sl.play();
    }//GEN-LAST:event_jSlider1MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // playlist button
        Create_Playlist cp = new Create_Playlist(this);
        Desktop.add(cp);
        cp.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // show playlist
        String text = jList1.getSelectedValue().toString();
        
        Show_Playlist sp = new Show_Playlist(text, this);
        Desktop.add(sp);
        sp.setVisible(true);
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // play previous file from playlist
        
        if (cur_dbFile - 1 > -1) {
            
            if (sl.playing_status == true) {
                sl.playing_status = false;
                sl.pause();
                jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png"));
            }
            
            cur_dbFile--;
            jLabel3.setText(dbFileNames[cur_dbFile]);

            try {
                sl = new SoundJLayer(dbFileLocations[cur_dbFile]);
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }

            int time = (int) (sl.lastFrame/38);
            int m_time = 0;
            System.out.println(time);

            int check_time = (cur_m_time + 1) * 60;

            while(time > check_time) {
                time = time - (60);

                m_time++;
            }

            String dis_time = Integer.toString(m_time) + " : " + time;

            jLabel4.setText(dis_time);

            jSlider1.setMaximum((int) sl.lastFrame);
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // play next file from playlist
        
        if (cur_dbFile + 1 < totalDBFiles) {
            
            if (sl.playing_status == true) {
                sl.playing_status = false;
                sl.pause();
                jButton2.setIcon(new javax.swing.ImageIcon("D:\\Programming\\FAST\\Semester 5\\Projects\\SCD\\Phase 1\\trippy_player\\src\\main\\java\\Images\\play-button-arrowhead.png"));
            }
            
            cur_dbFile++;
            jLabel3.setText(dbFileNames[cur_dbFile]);

            try {
                sl = new SoundJLayer(dbFileLocations[cur_dbFile]);
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }

            int time = (int) (sl.lastFrame/38);
            int m_time = 0;
            System.out.println(time);

            int check_time = (cur_m_time + 1) * 60;

            while(time > check_time) {
                time = time - (60);

                m_time++;
            }

            String dis_time = Integer.toString(m_time) + " : " + time;

            jLabel4.setText(dis_time);

            jSlider1.setMaximum((int) sl.lastFrame);
        }
        
    }//GEN-LAST:event_jButton4MouseClicked

    public void loadPlaylists() throws ClassNotFoundException, SQLException{
        // loading playlists from database
        
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url="jdbc:mysql://localhost:3306/trippyPlayer";
        String username="root";
        String pass="123456";
        Connection con = null;


        con = DriverManager.getConnection (url , username ,pass);

        String query = "select * from playlist";
        PreparedStatement pt = con.prepareStatement(query);
        ResultSet rs = pt.executeQuery();

        rs.last();
        
        int size = rs.getInt("playID");
        
        String[] file_names = new String[size];
        
        rs.first();
        
        int i = 0;
        do {
            file_names[i] = rs.getString("playName");
            i++;
        }while(rs.next());

        jList1.setListData(file_names);
        
        con.close();
    }
    
    public void play_playlistFun() {
        // playing audios from playlist
        
        jLabel3.setText(dbFileNames[cur_dbFile]);
        
        try {
            sl = new SoundJLayer(dbFileLocations[cur_dbFile]);
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }

        int time = (int) (sl.lastFrame/38);
        int m_time = 0;
        System.out.println(time);

        int check_time = (cur_m_time + 1) * 60;

        while(time > check_time) {
            time = time - (60);

            m_time++;
        }

        String dis_time = Integer.toString(m_time) + " : " + time;

        jLabel4.setText(dis_time);

        jSlider1.setMaximum((int) sl.lastFrame);


    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
                
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane Desktop;
    private javax.swing.JPanel bg;
    private javax.swing.JPanel bottom;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JPanel logo;
    private javax.swing.JPanel side;
    private javax.swing.JPanel top;
    // End of variables declaration//GEN-END:variables

}
